// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/awakim/immoblock-backend/cache/redis (interfaces: Cache)

// Package mockcache is a generated GoMock package.
package mockcache

import (
	context "context"
	reflect "reflect"
	time "time"

	token "github.com/awakim/immoblock-backend/token"
	gomock "github.com/golang/mock/gomock"
)

// MockCache is a mock of Cache interface.
type MockCache struct {
	ctrl     *gomock.Controller
	recorder *MockCacheMockRecorder
}

// MockCacheMockRecorder is the mock recorder for MockCache.
type MockCacheMockRecorder struct {
	mock *MockCache
}

// NewMockCache creates a new mock instance.
func NewMockCache(ctrl *gomock.Controller) *MockCache {
	mock := &MockCache{ctrl: ctrl}
	mock.recorder = &MockCacheMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCache) EXPECT() *MockCacheMockRecorder {
	return m.recorder
}

// DeleteRefreshToken mocks base method.
func (m *MockCache) DeleteRefreshToken(arg0 context.Context, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteRefreshToken", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteRefreshToken indicates an expected call of DeleteRefreshToken.
func (mr *MockCacheMockRecorder) DeleteRefreshToken(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteRefreshToken", reflect.TypeOf((*MockCache)(nil).DeleteRefreshToken), arg0, arg1, arg2)
}

// GetTokenData mocks base method.
func (m *MockCache) GetTokenData(arg0 context.Context, arg1 token.Payload) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTokenData", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetTokenData indicates an expected call of GetTokenData.
func (mr *MockCacheMockRecorder) GetTokenData(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTokenData", reflect.TypeOf((*MockCache)(nil).GetTokenData), arg0, arg1)
}

// SetTokenData mocks base method.
func (m *MockCache) SetTokenData(arg0 context.Context, arg1 token.Payload, arg2 time.Duration, arg3 token.Payload, arg4 time.Duration) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetTokenData", arg0, arg1, arg2, arg3, arg4)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetTokenData indicates an expected call of SetTokenData.
func (mr *MockCacheMockRecorder) SetTokenData(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetTokenData", reflect.TypeOf((*MockCache)(nil).SetTokenData), arg0, arg1, arg2, arg3, arg4)
}
