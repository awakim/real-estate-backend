// Code generated by sqlc. DO NOT EDIT.

package db

import (
	"database/sql"
	"time"

	"github.com/google/uuid"
)

type Account struct {
	ID         int64     `json:"id"`
	UserID     uuid.UUID `json:"user_id"`
	Balance    int64     `json:"balance"`
	PropertyID int64     `json:"property_id"`
	CreatedAt  time.Time `json:"created_at"`
}

type Entry struct {
	ID        int64 `json:"id"`
	AccountID int64 `json:"account_id"`
	// can be negative or positive
	Amount    int64     `json:"amount"`
	CreatedAt time.Time `json:"created_at"`
}

type Property struct {
	ID          int64  `json:"id"`
	Name        string `json:"name"`
	Description string `json:"description"`
	// must be greater than or equal to zero
	InitialBlockCount int64 `json:"initial_block_count"`
	// must be greater than or equal to zero
	RemainingBlockCount int64     `json:"remaining_block_count"`
	CreatedAt           time.Time `json:"created_at"`
	UpdatedAt           time.Time `json:"updated_at"`
}

type Transfer struct {
	ID            int64 `json:"id"`
	FromAccountID int64 `json:"from_account_id"`
	ToAccountID   int64 `json:"to_account_id"`
	// must be positive
	Amount    int64     `json:"amount"`
	CreatedAt time.Time `json:"created_at"`
}

type User struct {
	ID                uuid.UUID      `json:"id"`
	Email             string         `json:"email"`
	HashedPassword    string         `json:"hashed_password"`
	Nickname          string         `json:"nickname"`
	PhoneNumber       sql.NullString `json:"phone_number"`
	PasswordChangedAt time.Time      `json:"password_changed_at"`
	CreatedAt         time.Time      `json:"created_at"`
	IsAdmin           bool           `json:"is_admin"`
}

type UserInformation struct {
	UserID    uuid.UUID `json:"user_id"`
	Firstname string    `json:"firstname"`
	Lastname  string    `json:"lastname"`
	// has to be E164 compliant
	PhoneNumber string `json:"phone_number"`
	Nationality string `json:"nationality"`
	Address     string `json:"address"`
	PostalCode  string `json:"postal_code"`
	City        string `json:"city"`
	Country     string `json:"country"`
}
